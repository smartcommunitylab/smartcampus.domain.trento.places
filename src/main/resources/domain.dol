/*******************************************************************************
 * Copyright 2012-2013 Trento RISE
 * 
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 * 
 *        http://www.apache.org/licenses/LICENSE-2.0
 * 
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 ******************************************************************************/
package eu.trentorise.smartcampus.domain.trento.places;

import it.sayservice.platform.compiler.domain.model.annotations.ServiceNotification;
import it.sayservice.platform.compiler.domain.model.annotations.Subscription;

import eu.trentorise.smartcampus.domain.discovertrento.EventService;
import eu.trentorise.smartcampus.domain.discovertrento.POIService;
import eu.trentorise.smartcampus.domain.discovertrento.GenericPOI;

DomainObject TrentoPlacesPOIService implements POIService {
    
	port update(data : GenericPOI[]);

	action updatePOI(data : GenericPOI[]) {
		publish update(data);
	}

    subscribe TrentoPlacesSubscriber!PubbliciEsercizi() => updatePOI(data);
    subscribe TrentoPlacesSubscriber!StruttureRicettive() => updatePOI(data);
    
}

DomainObject TrentoPlacesSubscriber  {

    @ServiceNotification(serviceId="smartcampus.service.trento.places", methodName="GetComuneTrentoPubbliciEsercizi", converter="eu.trentorise.smartcampus.domain.trento.places.converter.TrentoPlacesPOIConverter")
    port PubbliciEsercizi(data : GenericPOI[]);
    
    @Subscription(serviceId="smartcampus.service.trento.places", methodName="GetComuneTrentoPubbliciEsercizi")
    operation subscribePubbliciEsercizi();       
    
    @ServiceNotification(serviceId="smartcampus.service.trento.places", methodName="GetComuneStruttureRicettive", converter="eu.trentorise.smartcampus.domain.trento.places.converter.TrentoPlacesPOIConverter")
    port StruttureRicettive(data : GenericPOI[]);
    
    @Subscription(serviceId="smartcampus.service.trento.places", methodName="GetComuneStruttureRicettive")
    operation subscribeStruttureRicettive();         
    
    action initialize() {
        invoke subscribePubbliciEsercizi();
        invoke subscribeStruttureRicettive();
    }

}
